
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: applications.nais.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .metadata.labels.team
    name: Team
    type: string
  - JSONPath: .status.synchronizationState
    name: State
    type: string
  group: nais.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    shortNames:
    - app
    singular: application
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: Application defines a NAIS application.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ApplicationSpec contains the NAIS manifest. Please keep this
            list sorted for clarity.
          properties:
            accessPolicy:
              description: By default, no traffic is allowed between applications
                inside the cluster. Configure access policies to allow specific applications.
              properties:
                inbound:
                  properties:
                    rules:
                      items:
                        properties:
                          application:
                            type: string
                          cluster:
                            type: string
                          namespace:
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  required:
                  - rules
                  type: object
                outbound:
                  properties:
                    external:
                      items:
                        properties:
                          host:
                            type: string
                          ports:
                            items:
                              properties:
                                name:
                                  type: string
                                port:
                                  format: int32
                                  type: integer
                                protocol:
                                  enum:
                                  - HTTP
                                  - HTTPS
                                  - GRPC
                                  - HTTP2
                                  - MONGO
                                  - TCP
                                  - TLS
                                  type: string
                              required:
                              - name
                              - port
                              - protocol
                              type: object
                            type: array
                        required:
                        - host
                        type: object
                      type: array
                    rules:
                      items:
                        properties:
                          application:
                            type: string
                          cluster:
                            type: string
                          namespace:
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  type: object
              type: object
            azure:
              properties:
                application:
                  description: Configures an Azure AD client for this application.
                    See [Azure AD](https://doc.nais.io/security/auth/azure-ad/) for
                    more details.
                  properties:
                    claims:
                      description: Claims defines additional configuration of the
                        emitted claims in tokens returned to the AzureAdApplication
                      properties:
                        extra:
                          description: Extra is a list of additional claims to be
                            mapped from an associated claim-mapping policy.
                          items:
                            enum:
                            - NAVident
                            - azp_name
                            type: string
                          type: array
                        groups:
                          description: Groups is a list of Azure AD group IDs to be
                            emitted in the 'Groups' claim.
                          items:
                            properties:
                              id:
                                type: string
                            type: object
                          type: array
                      type: object
                    enabled:
                      type: boolean
                    replyURLs:
                      items:
                        type: string
                      type: array
                    tenant:
                      enum:
                      - nav.no
                      - trygdeetaten.no
                      type: string
                  required:
                  - enabled
                  type: object
              required:
              - application
              type: object
            elastic:
              properties:
                instance:
                  description: Provisions an Elasticsearch instance and configures
                    your application so it can access it. Use the `instance_name`
                    that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                    repository.
                  type: string
              required:
              - instance
              type: object
            env:
              description: Custom environment variables injected into your container.
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                  valueFrom:
                    properties:
                      fieldRef:
                        properties:
                          fieldPath:
                            enum:
                            - ""
                            - metadata.name
                            - metadata.namespace
                            - metadata.labels
                            - metadata.annotations
                            - spec.nodeName
                            - spec.serviceAccountName
                            - status.hostIP
                            - status.podIP
                            type: string
                        required:
                        - fieldPath
                        type: object
                    required:
                    - fieldRef
                    type: object
                required:
                - name
                type: object
              type: array
            envFrom:
              description: Will expose all variables in ConfigMap or Secret resource
                as environment variables. One of `configmap` or `secret` is required.
              items:
                properties:
                  configmap:
                    type: string
                  secret:
                    type: string
                type: object
              type: array
            filesFrom:
              description: List of ConfigMap or Secret resources that will have their
                contents mounted into the containers as files. Either `configmap`
                or `secret` is required.
              items:
                properties:
                  configmap:
                    type: string
                  mountPath:
                    type: string
                  secret:
                    type: string
                type: object
              type: array
            gcp:
              properties:
                buckets:
                  description: Provision cloud storage buckets and connect them to
                    your application.
                  items:
                    properties:
                      cascadingDelete:
                        type: boolean
                      lifecycleCondition:
                        properties:
                          age:
                            type: integer
                          createdBefore:
                            type: string
                          numNewerVersions:
                            type: integer
                          withState:
                            type: string
                        type: object
                      name:
                        type: string
                      retentionPeriodDays:
                        maximum: 36500
                        minimum: 1
                        type: integer
                    required:
                    - name
                    type: object
                  type: array
                permissions:
                  description: List of _additional_ permissions that should be granted
                    to your application for accessing external GCP resources that
                    have not been provisioned through NAIS. [Supported resources found
                    here](https://cloud.google.com/config-connector/docs/reference/resource-docs/iam/iampolicymember#external_organization_level_policy_member).
                  items:
                    properties:
                      resource:
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      role:
                        type: string
                    required:
                    - resource
                    - role
                    type: object
                  type: array
                sqlInstances:
                  description: Provision database instances and connect them to your
                    application. See [PostgreSQL documentation](https://doc.nais.io/persistence/postgres/)
                    for more details.
                  items:
                    properties:
                      autoBackupHour:
                        description: If specified, run automatic backups of the SQL
                          database at the given hour. Note that this will backup the
                          whole SQL instance, and not separate databases. Restores
                          are done using the Google Cloud Console.
                        maximum: 23
                        minimum: 0
                        type: integer
                      cascadingDelete:
                        type: boolean
                      collation:
                        type: string
                      databases:
                        items:
                          properties:
                            envVarPrefix:
                              type: string
                            name:
                              type: string
                            users:
                              items:
                                properties:
                                  name:
                                    pattern: ^[_a-zA-Z][_a-zA-Z0-9]+$
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                      diskAutoresize:
                        type: boolean
                      diskSize:
                        description: How much hard drive space to allocate for the
                          SQL server, in gigabytes.
                        minimum: 10
                        type: integer
                      diskType:
                        enum:
                        - SSD
                        - HDD
                        type: string
                      highAvailability:
                        type: boolean
                      maintenance:
                        properties:
                          day:
                            maximum: 7
                            minimum: 1
                            type: integer
                          hour:
                            maximum: 23
                            minimum: 0
                            type: integer
                        type: object
                      name:
                        type: string
                      tier:
                        description: Server tier, i.e. how much CPU and memory allocated.
                          Available tiers can be retrieved on the command line by
                          running `gcloud sql tiers list`.
                        pattern: db-.+
                        type: string
                      type:
                        enum:
                        - POSTGRES_11
                        - POSTGRES_12
                        type: string
                    required:
                    - type
                    type: object
                  type: array
              type: object
            idporten:
              description: Configures an ID-porten client for this application. See
                [ID-porten](https://doc.nais.io/security/auth/idporten/) for more
                details.
              properties:
                accessTokenLifetime:
                  maximum: 3600
                  minimum: 1
                  type: integer
                clientURI:
                  type: string
                enabled:
                  type: boolean
                frontchannelLogoutPath:
                  pattern: ^\/.*$
                  type: string
                frontchannelLogoutURI:
                  type: string
                postLogoutRedirectURIs:
                  items:
                    type: string
                  type: array
                redirectPath:
                  pattern: ^\/.*$
                  type: string
                redirectURI:
                  pattern: ^https:\/\/.+$
                  type: string
                sessionLifetime:
                  maximum: 7200
                  minimum: 3600
                  type: integer
              required:
              - enabled
              type: object
            image:
              description: Your application's Docker image location and tag.
              type: string
            ingresses:
              description: List of URLs that will route HTTPS traffic to the application.
                All URLs must start with `https://`. Domain availability differs according
                to which environment your application is running in.
              items:
                pattern: ^https:\/\/.+$
                type: string
              type: array
            kafka:
              description: Enable Aiven Kafka for your application.
              properties:
                pool:
                  description: Configures your application to access an Aiven Kafka
                    cluster.
                  enum:
                  - nav-dev
                  - nav-prod
                  - nav-infrastructure
                  type: string
              required:
              - pool
              type: object
            leaderElection:
              description: If true, an HTTP endpoint will be available at `$ELECTOR_PATH`
                that returns the current leader.
              type: boolean
            liveness:
              description: Many applications running for long periods of time eventually
                transition to broken states, and cannot recover except by being restarted.
                Kubernetes provides liveness probes to detect and remedy such situations.
                Read more about this over at the [Kubernetes probes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            logformat:
              description: Format of the logs from the container. Use this if the
                container doesn't support JSON logging and the log is in a special
                format that need to be parsed.
              enum:
              - ""
              - accesslog
              - accesslog_with_processing_time
              - accesslog_with_referer_useragent
              - capnslog
              - logrus
              - gokit
              - redis
              - glog
              - simple
              - influxdb
              - log15
              type: string
            logtransform:
              description: Extra filters for modifying log content. This can e.g.
                be used for setting loglevel based on http status code.
              enum:
              - http_loglevel
              - dns_loglevel
              type: string
            maskinporten:
              description: Configures a Maskinporten client for this application.
                See [Maskinporten](https://doc.nais.io/security/auth/maskinporten/)
                for more details.
              properties:
                enabled:
                  type: boolean
                scopes:
                  items:
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - enabled
              type: object
            port:
              description: The port number which is exposed by the container and should
                receive traffic.
              type: integer
            preStopHookPath:
              description: A HTTP GET will be issued to this endpoint at least once
                before the pod is terminated.
              type: string
            prometheus:
              description: Prometheus is used to [scrape metrics from the pod](https://doc.nais.io/observability/metrics/).
              properties:
                enabled:
                  type: boolean
                path:
                  type: string
                port:
                  type: string
              type: object
            readiness:
              description: Sometimes, applications are temporarily unable to serve
                traffic. For example, an application might need to load large data
                or configuration files during startup, or depend on external services
                after startup. In such cases, you don't want to kill the application,
                but you don’t want to send it requests either. Kubernetes provides
                readiness probes to detect and mitigate these situations. A pod with
                containers reporting that they are not ready does not receive traffic
                through Kubernetes Services. Read more about this over at the [Kubernetes
                readiness documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            replicas:
              description: The numbers of pods to run in parallel.
              properties:
                cpuThresholdPercentage:
                  description: Amount of CPU usage before the autoscaler kicks in.
                  type: integer
                max:
                  description: The pod autoscaler will scale deployments on demand
                    until this maximum has been reached.
                  type: integer
                min:
                  description: The minimum amount of replicas acceptable for a successful
                    deployment.
                  type: integer
              type: object
            resources:
              description: When Containers have [resource requests](http://kubernetes.io/docs/user-guide/compute-resources/)
                specified, the Kubernetes scheduler can make better decisions about
                which nodes to place pods on.
              properties:
                limits:
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
                requests:
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
              type: object
            secureLogs:
              description: Whether or not to enable a sidecar container for secure
                logging.
              properties:
                enabled:
                  description: Whether to enable a sidecar container for secure logging.
                    If enabled, a volume is mounted in the pods where secure logs
                    can be saved.
                  type: boolean
              required:
              - enabled
              type: object
            service:
              description: How to connect to the default service in your application's
                container.
              properties:
                port:
                  description: Port for the default service. Default port is 80.
                  format: int32
                  type: integer
                protocol:
                  description: Which protocol the backend service runs on. Default
                    is http.
                  enum:
                  - http
                  - redis
                  - tcp
                  - grpc
                  type: string
              required:
              - port
              type: object
            skipCaBundle:
              description: Whether to skip injection of certificate authority bundle
                or not. Defaults to false.
              type: boolean
            startup:
              description: "Startup probes will be available with Kubernetes 1.18
                (in GCP, and 1.17 on-prem). Do not use this feature yet as it will
                not work. \n Sometimes, you have to deal with legacy applications
                that might require an additional startup time on their first initialization.
                In such cases, it can be tricky to set up liveness probe parameters
                without compromising the fast response to deadlocks that motivated
                such a probe. The trick is to set up a startup probe with the same
                command, HTTP or TCP check, with a `failureThreshold * periodSeconds`
                long enough to cover the worst case startup time."
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            strategy:
              description: Specifies the strategy used to replace old Pods by new
                ones.
              properties:
                type:
                  enum:
                  - Recreate
                  - RollingUpdate
                  type: string
              required:
              - type
              type: object
            tokenx:
              description: OAuth2 tokens from TokenX for your application.
              properties:
                enabled:
                  description: if enabled, the application will have a jwker secret
                    injected
                  type: boolean
                mountSecretsAsFilesOnly:
                  description: if enabled, secrets for TokenX will be mounted as files
                    only, i.e. not as env.
                  type: boolean
              required:
              - enabled
              type: object
            tracing:
              properties:
                enabled:
                  description: if enabled, a rule allowing egress to app:jaeger will
                    be appended to NetworkPolicy
                  type: boolean
              required:
              - enabled
              type: object
            vault:
              description: Provides secrets management, identity-based access, and
                encrypting application data for auditing of secrets for applications,
                systems, and users.
              properties:
                enabled:
                  type: boolean
                paths:
                  items:
                    properties:
                      format:
                        enum:
                        - flatten
                        - json
                        - yaml
                        - env
                        - properties
                        - ""
                        type: string
                      kvPath:
                        type: string
                      mountPath:
                        type: string
                    required:
                    - kvPath
                    - mountPath
                    type: object
                  type: array
                sidecar:
                  type: boolean
              type: object
            webproxy:
              description: Expose web proxy configuration to the application using
                the `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment variables.
              type: boolean
          required:
          - image
          type: object
        status:
          description: ApplicationStatus contains different NAIS status properties
          properties:
            correlationID:
              type: string
            deploymentRolloutStatus:
              type: string
            rolloutCompleteTime:
              format: int64
              type: integer
            synchronizationHash:
              type: string
            synchronizationState:
              type: string
            synchronizationTime:
              format: int64
              type: integer
          type: object
      required:
      - spec
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
