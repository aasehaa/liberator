
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: naisjobs.nais.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .metadata.labels.team
    name: Team
    type: string
  - JSONPath: .status.synchronizationState
    name: State
    type: string
  group: nais.io
  names:
    kind: Naisjob
    listKind: NaisjobList
    plural: naisjobs
    shortNames:
    - nj
    singular: naisjob
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: Naisjob defines a NAIS Naisjob.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NaisjobSpec contains the NAIS manifest. Please keep this list
            sorted for clarity.
          properties:
            accessPolicy:
              description: By default, no traffic is allowed between naisjobs inside
                the cluster. Configure access policies to explicitly allow communication
                between naisjobs. This is also used for granting inbound access in
                the context of Azure AD and TokenX clients.
              properties:
                inbound:
                  description: Configures inbound access for your application.
                  properties:
                    rules:
                      description: List of NAIS applications that may access your
                        application. These settings apply both to Zero Trust network
                        connectivity and token validity for Azure AD and TokenX tokens.
                      items:
                        properties:
                          application:
                            description: The application's name.
                            type: string
                          cluster:
                            description: The application's cluster. May be omitted
                              if it should be in the same cluster as your application.
                            type: string
                          namespace:
                            description: The application's namespace. May be omitted
                              if it should be in the same namespace as your application.
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  required:
                  - rules
                  type: object
                outbound:
                  description: Configures outbound access for your application.
                  properties:
                    external:
                      description: List of external resources that your applications
                        should be able to reach.
                      items:
                        properties:
                          host:
                            description: The _host_ that your application should be
                              able to reach, i.e. without the protocol (e.g. `https://`).
                            type: string
                          ports:
                            description: List of port rules for external communication.
                              Must be specified if using protocols other than HTTPS.
                            items:
                              properties:
                                name:
                                  description: Human-readable identifier for this
                                    rule.
                                  type: string
                                port:
                                  description: The port used for communication.
                                  format: int32
                                  type: integer
                                protocol:
                                  description: The protocol used for communication.
                                  enum:
                                  - HTTP
                                  - HTTPS
                                  - GRPC
                                  - HTTP2
                                  - MONGO
                                  - TCP
                                  - TLS
                                  type: string
                              required:
                              - name
                              - port
                              - protocol
                              type: object
                            type: array
                        required:
                        - host
                        type: object
                      type: array
                    rules:
                      description: List of NAIS applications that your application
                        needs to access. These settings apply to Zero Trust network
                        connectivity.
                      items:
                        properties:
                          application:
                            description: The application's name.
                            type: string
                          cluster:
                            description: The application's cluster. May be omitted
                              if it should be in the same cluster as your application.
                            type: string
                          namespace:
                            description: The application's namespace. May be omitted
                              if it should be in the same namespace as your application.
                            type: string
                        required:
                        - application
                        type: object
                      type: array
                  type: object
              type: object
            activeDeadlineSeconds:
              description: 'Once a Naisjob reaches activeDeadlineSeconds, all of its
                running Pods are terminated and the Naisjob status will become type:
                Failed with reason: DeadlineExceeded. If set, this takes presedence
                over BackoffLimit.'
              format: int64
              type: integer
            azure:
              description: Provisions and configures Azure resources.
              properties:
                application:
                  description: Configures an Azure AD client for this application.
                    See [Azure AD](https://doc.nais.io/security/auth/azure-ad/) for
                    more details.
                  properties:
                    claims:
                      description: Claims defines additional configuration of the
                        emitted claims in tokens returned to the Azure AD application.
                      properties:
                        extra:
                          description: Extra is a list of additional claims to be
                            mapped from an associated claim-mapping policy.
                          items:
                            enum:
                            - NAVident
                            - azp_name
                            type: string
                          type: array
                        groups:
                          description: Groups is a list of Azure AD group IDs to be
                            emitted in the 'Groups' claim.
                          items:
                            properties:
                              id:
                                description: ID is the actual `object ID` associated
                                  with the given group in Azure AD.
                                type: string
                            type: object
                          type: array
                      type: object
                    enabled:
                      description: Whether to enable provisioning of an Azure AD application.
                        If enabled, an Azure AD application will be provisioned.
                      type: boolean
                    replyURLs:
                      description: ReplyURLs is a list of allowed redirect URLs used
                        when performing OpenID Connect flows for authenticating end-users.
                      items:
                        type: string
                      type: array
                    tenant:
                      description: "A Tenant represents an organization in Azure AD.
                        \n If unspecified, will default to `trygdeetaten.no` for development
                        clusters and `nav.no` for production clusters."
                      enum:
                      - nav.no
                      - trygdeetaten.no
                      type: string
                  required:
                  - enabled
                  type: object
              required:
              - application
              type: object
            backoffLimit:
              description: Specify the number of retries before considering a Naisjob
                as failed
              format: int32
              type: integer
            command:
              description: Override command when starting Docker image.
              items:
                type: string
              type: array
            elastic:
              properties:
                instance:
                  description: Provisions an Elasticsearch instance and configures
                    your application so it can access it. Use the `instance_name`
                    that you specified in the [navikt/aiven-iac](https://github.com/navikt/aiven-iac)
                    repository.
                  type: string
              required:
              - instance
              type: object
            env:
              description: Custom environment variables injected into your container.
                Specify either `value` or `valueFrom`, but not both.
              items:
                properties:
                  name:
                    description: Environment variable name. May only contain letters,
                      digits, and the underscore `_` character.
                    type: string
                  value:
                    description: Environment variable value. Numbers and boolean values
                      must be quoted. Required unless `valueFrom` is specified.
                    type: string
                  valueFrom:
                    description: Dynamically set environment variables based on fields
                      found in the Pod spec.
                    properties:
                      fieldRef:
                        properties:
                          fieldPath:
                            description: Field value from the `Pod` spec that should
                              be copied into the environment variable.
                            enum:
                            - ""
                            - metadata.name
                            - metadata.namespace
                            - metadata.labels
                            - metadata.annotations
                            - spec.nodeName
                            - spec.serviceAccountName
                            - status.hostIP
                            - status.podIP
                            type: string
                        required:
                        - fieldPath
                        type: object
                    required:
                    - fieldRef
                    type: object
                required:
                - name
                type: object
              type: array
            envFrom:
              description: "EnvFrom exposes all variables in the ConfigMap or Secret
                resources as environment variables. One of `configMap` or `secret`
                is required. \n Environment variables will take the form `KEY=VALUE`,
                where `key` is the ConfigMap or Secret key. You can specify as many
                keys as you like in a single ConfigMap or Secret. \n The ConfigMap
                and Secret resources must live in the same Kubernetes namespace as
                the Naisjob resource."
              items:
                properties:
                  configmap:
                    description: Name of the `ConfigMap` where environment variables
                      are specified. Required unless `secret` is set.
                    type: string
                  secret:
                    description: Name of the `Secret` where environment variables
                      are specified. Required unless `configMap` is set.
                    type: string
                type: object
              type: array
            failedJobsHistoryLimit:
              description: Specify how many failed Jobs should be kept.
              format: int32
              type: integer
            filesFrom:
              description: "List of ConfigMap or Secret resources that will have their
                contents mounted into the containers as files. Either `configMap`
                or `secret` is required. \n Files will take the path `<mountPath>/<key>`,
                where `key` is the ConfigMap or Secret key. You can specify as many
                keys as you like in a single ConfigMap or Secret, and they will all
                be mounted to the same directory. \n The ConfigMap and Secret resources
                must live in the same Kubernetes namespace as the Naisjob resource."
              items:
                properties:
                  configmap:
                    description: Name of the `ConfigMap` that contains files that
                      should be mounted into the container. Required unless `secret`
                      is set.
                    type: string
                  mountPath:
                    description: "Filesystem path inside the pod where files are mounted.
                      The directory will be created if it does not exist. If the directory
                      exists, any files in the directory will be made unaccessible.
                      \n Defaults to `/var/run/configmaps/<NAME>` or `/var/run/secrets`,
                      depending on which of them is specified."
                    type: string
                  secret:
                    description: Name of the `Secret` that contains files that should
                      be mounted into the container. Required unless `configMap` is
                      set. If mounting multiple secrets, `mountPath` *MUST* be set
                      to avoid collisions.
                    type: string
                type: object
              type: array
            gcp:
              properties:
                buckets:
                  description: Provision cloud storage buckets and connect them to
                    your application.
                  items:
                    properties:
                      cascadingDelete:
                        description: Allows deletion of bucket. Set to true if you
                          want to delete the bucket.
                        type: boolean
                      lifecycleCondition:
                        description: Conditions for the bucket to use when selecting
                          objects to delete in cleanup.
                        properties:
                          age:
                            description: Condition is satisfied when the object reaches
                              the specified age in days. These will be deleted.
                            type: integer
                          createdBefore:
                            description: Condition is satisfied when the object is
                              created before midnight on the specified date. These
                              will be deleted.
                            type: string
                          numNewerVersions:
                            description: Condition is satisfied when the object has
                              the specified number of newer versions. The older versions
                              will be deleted.
                            type: integer
                          withState:
                            description: Condition is satisfied when the object has
                              the specified state.
                            enum:
                            - ""
                            - LIVE
                            - ARCHIVED
                            - ANY
                            type: string
                        type: object
                      name:
                        description: The name of the bucket
                        type: string
                      retentionPeriodDays:
                        description: The number of days to hold objects in the bucket
                          before it is allowed to delete them.
                        maximum: 36500
                        minimum: 1
                        type: integer
                    required:
                    - name
                    type: object
                  type: array
                permissions:
                  description: List of _additional_ permissions that should be granted
                    to your application for accessing external GCP resources that
                    have not been provisioned through NAIS.
                  items:
                    properties:
                      resource:
                        description: IAM resource to bind the role to.
                        properties:
                          apiVersion:
                            description: Kubernetes _APIVersion_.
                            type: string
                          kind:
                            description: Kubernetes _Kind_.
                            type: string
                          name:
                            description: Kubernetes _Name_.
                            type: string
                        required:
                        - apiVersion
                        - kind
                        type: object
                      role:
                        description: Name of the GCP role to bind the resource to.
                        type: string
                    required:
                    - resource
                    - role
                    type: object
                  type: array
                sqlInstances:
                  description: Provision database instances and connect them to your
                    application.
                  items:
                    properties:
                      autoBackupHour:
                        description: If specified, run automatic backups of the SQL
                          database at the given hour. Note that this will backup the
                          whole SQL instance, and not separate databases. Restores
                          are done using the Google Cloud Console.
                        maximum: 23
                        minimum: 0
                        type: integer
                      cascadingDelete:
                        description: Remove the entire Postgres server including all
                          data when the Kubernetes resource is deleted. *THIS IS A
                          DESTRUCTIVE OPERATION*! Set cascading delete only when you
                          want to remove data forever.
                        type: boolean
                      collation:
                        description: Sort order for `ORDER BY ...` clauses.
                        type: string
                      databases:
                        description: List of databases that should be created on this
                          Postgres server.
                        items:
                          properties:
                            envVarPrefix:
                              description: Prefix to add to environment variables
                                made available for database connection.
                              type: string
                            name:
                              description: Database name.
                              type: string
                            users:
                              description: The users created to allow database access.
                              items:
                                properties:
                                  name:
                                    description: User name.
                                    pattern: ^[_a-zA-Z][_a-zA-Z0-9]+$
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          type: object
                        type: array
                      diskAutoresize:
                        description: When set to true, GCP will automatically increase
                          storage by XXX for the database when disk usage is above
                          the high water mark.
                        type: boolean
                      diskSize:
                        description: How much hard drive space to allocate for the
                          SQL server, in gigabytes.
                        minimum: 10
                        type: integer
                      diskType:
                        description: Disk type to use for storage in the database.
                        enum:
                        - SSD
                        - HDD
                        type: string
                      highAvailability:
                        description: When set to true this will set up standby database
                          for failover.
                        type: boolean
                      maintenance:
                        description: Desired maintenance window for database updates.
                        properties:
                          day:
                            maximum: 7
                            minimum: 1
                            type: integer
                          hour:
                            maximum: 23
                            minimum: 0
                            type: integer
                        type: object
                      name:
                        description: The name of the instance, if omitted the database
                          name will be used.
                        type: string
                      tier:
                        description: Server tier, i.e. how much CPU and memory allocated.
                          Available tiers can be retrieved on the command line by
                          running `gcloud sql tiers list`.
                        pattern: db-.+
                        type: string
                      type:
                        description: PostgreSQL version.
                        enum:
                        - POSTGRES_11
                        - POSTGRES_12
                        type: string
                    required:
                    - type
                    type: object
                  type: array
              type: object
            image:
              description: Your Naisjob's Docker image location and tag.
              type: string
            kafka:
              description: Enable Aiven Kafka for your Naisjob.
              properties:
                pool:
                  description: Configures your application to access an Aiven Kafka
                    cluster.
                  enum:
                  - nav-dev
                  - nav-prod
                  - nav-infrastructure
                  type: string
              required:
              - pool
              type: object
            liveness:
              description: Many Naisjobs running for long periods of time eventually
                transition to broken states, and cannot recover except by being restarted.
                Kubernetes provides liveness probes to detect and remedy such situations.
                Read more about this over at the [Kubernetes probes documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            logformat:
              description: Format of the logs from the container. Use this if the
                container doesn't support JSON logging and the log is in a special
                format that need to be parsed.
              enum:
              - ""
              - accesslog
              - accesslog_with_processing_time
              - accesslog_with_referer_useragent
              - capnslog
              - logrus
              - gokit
              - redis
              - glog
              - simple
              - influxdb
              - log15
              type: string
            logtransform:
              description: Extra filters for modifying log content. This can e.g.
                be used for setting loglevel based on http status code.
              enum:
              - http_loglevel
              - dns_loglevel
              type: string
            maskinporten:
              description: Configures a Maskinporten client for this Naisjob. See
                [Maskinporten](https://doc.nais.io/security/auth/maskinporten/) for
                more details.
              properties:
                enabled:
                  description: If enabled, provisions and configures a Maskinporten
                    client at DigDir.
                  type: boolean
                scopes:
                  description: List of scopes that your client should request access
                    to. Ensure that the NAV organization has been granted access to
                    the scope prior to requesting access.
                  items:
                    properties:
                      name:
                        description: The fully qualified name of the scope.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
              required:
              - enabled
              type: object
            preStopHookPath:
              description: A HTTP GET will be issued to this endpoint at least once
                before the pod is terminated.
              type: string
            readiness:
              description: Sometimes, Naisjobs are temporarily unable to serve traffic.
                For example, an Naisjob might need to load large data or configuration
                files during startup, or depend on external services after startup.
                In such cases, you don't want to kill the Naisjob, but you don’t want
                to send it requests either. Kubernetes provides readiness probes to
                detect and mitigate these situations. A pod with containers reporting
                that they are not ready does not receive traffic through Kubernetes
                Services. Read more about this over at the [Kubernetes readiness documentation](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/).
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            resources:
              description: When Containers have [resource requests](http://kubernetes.io/docs/user-guide/compute-resources/)
                specified, the Kubernetes scheduler can make better decisions about
                which nodes to place pods on.
              properties:
                limits:
                  description: Limit defines the maximum amount of resources a container
                    can use before getting evicted.
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
                requests:
                  description: Request defines the amount of resources a container
                    is allocated on startup.
                  properties:
                    cpu:
                      pattern: ^\d+m?$
                      type: string
                    memory:
                      pattern: ^\d+[KMG]i$
                      type: string
                  type: object
              type: object
            schedule:
              description: The [Cron](https://en.wikipedia.org/wiki/Cron) schedule
                for running the Naisjob. If not specified, the Naisjob will be run
                as a one-shot Job.
              type: string
            secureLogs:
              description: Whether or not to enable a sidecar container for secure
                logging.
              properties:
                enabled:
                  description: Whether to enable a sidecar container for secure logging.
                    If enabled, a volume is mounted in the pods where secure logs
                    can be saved.
                  type: boolean
              required:
              - enabled
              type: object
            skipCaBundle:
              description: Whether to skip injection of NAV certificate authority
                bundle or not. Defaults to false.
              type: boolean
            startup:
              description: Kubernetes uses startup probes to know when a container
                Naisjob has started. If such a probe is configured, it disables liveness
                and readiness checks until it succeeds, making sure those probes don't
                interfere with the Naisjob startup. This can be used to adopt liveness
                checks on slow starting containers, avoiding them getting killed by
                Kubernetes before they are up and running.
              properties:
                failureThreshold:
                  description: When a Pod starts, and the probe fails, Kubernetes
                    will try _failureThreshold_ times before giving up. Giving up
                    in case of a startup probe means restarting the Pod.
                  type: integer
                initialDelay:
                  description: Number of seconds after the container has started before
                    startup probes are initiated.
                  type: integer
                path:
                  description: HTTP endpoint path that signals 200 OK if the application
                    has started successfully.
                  type: string
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  type: integer
                port:
                  description: Port for the startup probe.
                  type: integer
                timeout:
                  description: Number of seconds after which the probe times out.
                  type: integer
              required:
              - path
              type: object
            successfulJobsHistoryLimit:
              description: Specify how many completed Jobs should be kept.
              format: int32
              type: integer
            ttlSecondsAfterFinished:
              description: Specify the number of seconds to wait before removing the
                Job after it has finished (either Completed or Failed). If the field
                is unset, this Job won't be cleaned up by the TTL controller after
                it finishes.
              format: int32
              type: integer
            vault:
              description: Provides secrets management, identity-based access, and
                encrypting Naisjob data for auditing of secrets for Naisjobs, systems,
                and users.
              properties:
                enabled:
                  description: If set to true, fetch secrets from Vault and inject
                    into the pods.
                  type: boolean
                paths:
                  description: "List of secret paths to be read from Vault and injected
                    into the pod's filesystem. Overriding the `paths` array is optional,
                    and will give you fine-grained control over which Vault paths
                    that will be mounted on the file system. \n By default, the list
                    will contain an entry with \n `kvPath: /kv/<environment>/<zone>/<application>/<namespace>`
                    `mountPath: /var/run/secrets/nais.io/vault` \n that will always
                    be attempted to be mounted."
                  items:
                    properties:
                      format:
                        description: Format of the secret that should be processed.
                        enum:
                        - flatten
                        - json
                        - yaml
                        - env
                        - properties
                        - ""
                        type: string
                      kvPath:
                        description: Path to Vault key/value store that should be
                          mounted into the file system.
                        type: string
                      mountPath:
                        description: File system path that the secret will be mounted
                          into.
                        type: string
                    required:
                    - kvPath
                    - mountPath
                    type: object
                  type: array
                sidecar:
                  description: If enabled, the sidecar will automatically refresh
                    the token's Time-To-Live before it expires.
                  type: boolean
              type: object
            webproxy:
              description: Inject on-premises web proxy configuration into the Naisjob
                pod. Most Linux Naisjobs should auto-detect these settings from the
                `$HTTP_PROXY`, `$HTTPS_PROXY` and `$NO_PROXY` environment variables
                (and their lowercase counterparts). Java Naisjobs can start the JVM
                using parameters from the `$JAVA_PROXY_OPTIONS` environment variable.
              type: boolean
          required:
          - image
          type: object
        status:
          description: NaisjobStatus contains different NAIS status properties
          properties:
            correlationID:
              type: string
            deploymentRolloutStatus:
              type: string
            rolloutCompleteTime:
              format: int64
              type: integer
            synchronizationHash:
              type: string
            synchronizationState:
              type: string
            synchronizationTime:
              format: int64
              type: integer
          type: object
      required:
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
